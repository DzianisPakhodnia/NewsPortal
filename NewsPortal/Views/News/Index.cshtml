@model List<NewsPortal.Models.News>

@{
    ViewData["Title"] = "Новости";
}

<link rel="stylesheet" href="~/css/news.css" asp-append-version="true" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">

<div class="container-fluid py-5">
    <div class="container">
        <div class="row mb-5">
            <div class="col-12">
                <h1 class="display-4 fw-bold text-primary mb-2" data-i18n="NewsTitle">Новости</h1>
                <p class="lead text-muted" data-i18n="NewsLead">Просматривайте все новости</p>
            </div>
        </div>

        @if (!Model.Any())
        {
            <div class="text-center py-5">
                <div class="empty-state">
                    <i class="bi bi-newspaper display-1 text-muted mb-3"></i>
                    <h3 class="text-muted" data-i18n="NoNews">Новостей пока нет</h3>
                    <p class="text-muted mb-4" data-i18n="NoNewsDesc">Пока нет опубликованных новостей</p>
                </div>
            </div>
        }
        else
        {
            <div class="row g-4">
                @foreach (var news in Model)
                {
                    <div class="col-sm-6 col-lg-4">
                        <a href="@Url.Action("Details", "News", new { id = news.Id })" class="text-decoration-none">
                            <div class="card news-admin-card h-100 border-0 shadow-hover">
                                @if (!string.IsNullOrEmpty(news.ImageUrl))
                                {
                                    <div class="card-image-container position-relative overflow-hidden">
                                        <img src="@news.ImageUrl" class="card-img-top" alt="@news.Title"
                                             style="height: 220px; object-fit: cover;">
                                    </div>
                                }
                                else
                                {
                                    <div class="card-image-container position-relative overflow-hidden bg-light d-flex align-items-center justify-content-center" style="height: 220px;">
                                        <i class="bi bi-image text-muted display-4"></i>
                                    </div>
                                }

                                <div class="card-body d-flex flex-column p-4">
                                    <h5 class="card-title fw-bold text-dark mb-2 line-clamp-2">@news.Title</h5>
                                    @if (!string.IsNullOrEmpty(news.Subtitle))
                                    {
                                        <h6 class="card-subtitle text-muted mb-3 line-clamp-1">@news.Subtitle</h6>
                                    }
                                    <p class="card-text text-secondary mb-4 flex-grow-1 line-clamp-3">@news.Text</p>

                                    <div class="d-flex justify-content-start align-items-center pt-3 border-top">
                                        <small class="text-muted">
                                            <i class="bi bi-calendar me-1"></i>
                                            @news.CreatedAt.ToString("dd.MM.yyyy")
                                        </small>
                                    </div>
                                </div>
                            </div>
                        </a>
                    </div>
                }
            </div>
        }
    </div>
</div>

<script>
    const translations = {
        ru: {
            NewsTitle: "Новости",
            NewsLead: "Просматривайте все новости",
            NoNews: "Новостей пока нет",
            NoNewsDesc: "Пока нет опубликованных новостей"
        },
        en: {
            NewsTitle: "News",
            NewsLead: "Browse all news",
            NoNews: "No news yet",
            NoNewsDesc: "No published news yet"
        }
    };

    function changeLanguage(lang) {
        document.querySelectorAll("[data-i18n]").forEach(el => {
            const key = el.getAttribute("data-i18n");
            if (translations[lang][key]) {
                el.textContent = translations[lang][key];
            }
        });
    }

    document.addEventListener('DOMContentLoaded', () => {
        const languageOptions = document.querySelectorAll('.language-option');
        languageOptions.forEach(option => {
            option.addEventListener('click', function(e) {
                e.preventDefault();
                const lang = this.getAttribute('data-lang');
                changeLanguage(lang);
            });
        });

        // По умолчанию русский
        changeLanguage('ru');
    });
</script>
