@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - NewsPortal</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
</head>
<body class="d-flex flex-column min-vh-100">
    <header class="border-bottom">
        <div class="container">
            <div class="d-flex justify-content-between align-items-center py-3">
                <a href="/" class="text-decoration-none">
                    <h4 class="text-primary mb-0" data-i18n="SiteName">NewsPortal</h4>
                </a>

                <nav class="d-flex gap-4 align-items-center">
                    <!-- Переключатель языков -->
                    <div class="dropdown me-3">
                        <button class="btn btn-outline-secondary btn-sm dropdown-toggle" type="button" id="languageDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="bi bi-translate me-1"></i><span id="currentLanguage">Русский</span>
                        </button>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item language-option" href="#" data-lang="ru">Русский</a></li>
                            <li><a class="dropdown-item language-option" href="#" data-lang="en">English</a></li>
                        </ul>
                    </div>

                    <a href="/news" class="text-decoration-none text-dark fw-semibold" data-i18n="NewsMenu">Новости</a>
                    <a href="/Admin/Login" class="text-decoration-none text-dark fw-semibold" data-i18n="AdminPanelMenu">Админ-панель</a>
                </nav>
            </div>
        </div>
    </header>

    <main class="flex-grow-1">
        @RenderBody()
    </main>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const languageOptions = document.querySelectorAll('.language-option');
            const currentLanguageElement = document.getElementById('currentLanguage');
            const dropdownButton = document.getElementById('languageDropdown');

            // Словарь переводов
            const translations = {
                ru: {
                    SiteName: "NewsPortal",
                    NewsMenu: "Новости",
                    AdminPanelMenu: "Админ-панель",
                    CurrentLanguage: "Русский"
                },
                en: {
                    SiteName: "NewsPortal",
                    NewsMenu: "News",
                    AdminPanelMenu: "Admin Panel",
                    CurrentLanguage: "English"
                }
            };

            // Функция смены языка
            function changeLanguage(lang) {
                const langData = translations[lang];
                if (!langData) return;

                currentLanguageElement.textContent = langData.CurrentLanguage;

                // Переводим все элементы с data-i18n
                document.querySelectorAll("[data-i18n]").forEach(el => {
                    const key = el.getAttribute("data-i18n");
                    if (langData[key]) {
                        el.textContent = langData[key];
                    }
                });

                // Активный класс для выбранного языка
                languageOptions.forEach(option => option.classList.remove('active'));
                const selectedOption = document.querySelector(`[data-lang="${lang}"]`);
                if (selectedOption) selectedOption.classList.add('active');

                // Закрываем dropdown
                const dropdown = bootstrap.Dropdown.getInstance(dropdownButton);
                if (dropdown) dropdown.hide();
            }

            // Обработчики для опций
            languageOptions.forEach(option => {
                option.addEventListener('click', function(e) {
                    e.preventDefault();
                    const lang = this.getAttribute('data-lang');
                    changeLanguage(lang);
                });
            });

            // Инициализация языка по умолчанию
            changeLanguage('ru');
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
